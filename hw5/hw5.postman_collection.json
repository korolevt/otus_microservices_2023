{
	"info": {
		"_postman_id": "3022cc34-2afb-4b82-af5b-63fa5c25caaf",
		"name": "hw5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Script",
			"item": [
				{
					"name": "Register (create) user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Созданный Пользователь 1 должен вернуть идентификатор\", () => {",
									"    pm.response.to.have.status(200);",
									"})",
									"pm.collectionVariables.set('user1', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user1\",\n    \"password\": \"passwd1\",\n    \"email\": \"user1@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Access user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь 1 не имеет доступа без логина\", () => {",
									"    pm.response.to.have.status(403)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{user1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь 1 аутентифицирован\", () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.headers.get('Set-Cookie')).not.undefined",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user1\",\r\n    \"password\": \"passwd1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authorize user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь 1 получает токен авторизации\", () => {",
									"    pm.expect(pm.response.headers.get('X-Auth-Token')).not.undefined",
									"});",
									"",
									"pm.collectionVariables.set('x-auth-token', pm.response.headers.get('X-Auth-Token'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user1 email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({key: 'X-Auth-Token', value: pm.collectionVariables.get('x-auth-token') });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Почта Пользователя 1 изменена\", () => {",
									"    pm.expect(pm.response.json().email).to.be.eql(\"changed@example.com\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user1\",\n    \"password\": \"passwd1\",\n    \"email\": \"changed@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{user1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register (create) user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Созданный Пользователь 2 должен вернуть идентификатор\", () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.json().id).not.undefined",
									"})",
									"pm.collectionVariables.set('user2', pm.response.json().id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user2\",\n    \"password\": \"passwd2\",\n    \"email\": \"user2@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь 2 аутентифицирован\", () => {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(pm.response.headers.get('Set-Cookie')).not.undefined",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user2\",\r\n    \"password\": \"passwd2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authorize user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set('x-auth-token', pm.response.headers.get('X-Auth-Token'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Access user1 from user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь 2 не имеет доступа на чтение и редактирование профиля Пользователя 1\", () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({key: 'X-Auth-Token', value: pm.collectionVariables.get('x-auth-token') });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{user1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{user1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Access user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Пользователь 2 имеет доступ на чтение и редактирование профиля Пользователя 2\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({key: 'X-Auth-Token', value: pm.collectionVariables.get('x-auth-token') });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{user2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{user2}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user1",
			"value": ""
		},
		{
			"key": "user2",
			"value": ""
		},
		{
			"key": "x-auth-token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "http://arch.homework:9088"
		}
	]
}