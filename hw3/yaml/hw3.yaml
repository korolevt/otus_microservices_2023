apiVersion: v1
kind: Service
metadata:
  name: hw3
  labels:
    app: hw3
spec:
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  selector:
    app: hw3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hw3
  labels:
    app: hw3
spec:
  selector:
    matchLabels:
      app: hw3
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: hw3
    spec:
      containers:
      - name: hw3
        image: tvv766/hw3
        ports:
        - containerPort: 8000
        readinessProbe:
          tcpSocket:
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 3
        env:   # Setting Enviornmental Variables
          - name: DB_HOST   # Setting Database host address from configMap
            valueFrom:
              configMapKeyRef:
                name: postgres-conf  # name of configMap
                key: host
          - name: DB_NAME  # Setting Database name from configMap
            valueFrom:
              configMapKeyRef:
                name: postgres-conf
                key: name
          - name: POSTGRES_USER  # Setting Database username from Secret
            valueFrom:
              secretKeyRef:
                name: postgres-secret # Secret Name
                key: postgres_user
          - name: POSTGRES_PASSWORD # Setting Database password from Secret
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: postgres_password
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hw3-ingress
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/health(/?)$ /health break;
      rewrite ^/otusapp/(.+)/(.*) /$2 break;
spec:
  ingressClassName: nginx
  rules:
  - host: arch.homework
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hw3
            port:
              number: 8000