apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hw4-chart.fullname" . }}
  labels:
    {{- include "hw4-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hw4-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hw4-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hw4-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            periodSeconds: 10
            httpGet:
              path: /actuator/health/liveness
              port: http
          readinessProbe:
            periodSeconds: 10
            httpGet:
              path: /actuator/health/readiness
              port: http
          startupProbe:
            failureThreshold: 25
            periodSeconds: 10
            httpGet:
              path: /actuator/health
              port: http
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf  # name of configMap
                  key: host
            - name: DB_NAME  # Setting Database name from configMap
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: name
            - name: POSTGRES_USER  # Setting Database username from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-secret # Secret Name
                  key: postgres_user
            - name: POSTGRES_PASSWORD # Setting Database password from Secret
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres_password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
